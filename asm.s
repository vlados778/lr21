.data

/* Массив int чисел (4 байта) */
array:
    .long 123, -56, 32, 999, -55, 0, 21, -66, -43, -9, 5
array_end:

/* Формат вывода для чисел меньших М */
format_output_less:
    .string "Sum less M = %d \n"

/* Формат вывода для чисел больших М */
format_output_greater:
    .string "Sum greater M = %d\n"

/* Переменна М (int) */
M:
    .long 0

/* Формат вывода перед вводом */
form_input:
    .string "Enter M: "

/* Формат для ввода М (scanf) */
format_input_num:
    .string "%d"


.text
.global main


/* rax - число М */
/* rbx - сумма чисел, больших М */
/* rcx - сумма чисел, меньших М*/
/* rdx - значение элемента */
/* rsi - ссылка на элемент массива*/

main:                           /* НАЧАЛО ПРОГРАММЫ */

    pushl $form_input           /* Помещаем в стэк формат вывода */
    call printf                 /* Вызываем printf из C */
    addl $4, %esp               /* Возвращаем значение стэка обратно */

    pushl $M                    /* Помещаем указатель на М в стэк*/
    pushl $format_input_num     /* Помещаем формат ввода в стэк*/
    call scanf                  /* Вызов scanf из библиотеки С */
    addl $8, %esp               /* Возвращение стэка обратно */

    movl $M, %eax               /* Помещение указателя на М в eax */
    movl (%eax), %eax           /* Получение значения по этому указателю */

    
    xorl %ebx, %ebx             /* Обнуление большей суммы */
    xorl %ecx, %ecx             /* Обнуление меньшей суммы */
    movl $array, %esi           /* Помещение указателя начала массив в esi */

check_loop:                     /*  */
    movl (%esi), %edx           /* Получение значения из указателя на массив */
    cmpl %eax, %edx             /* Сравнение значения с М */
    jg greater                  /* Если значение больше, то прыгаем на greater */
    jl less                     /* Если значение меньше, то прыгаем на less */
    jmp next                    /* Если равно (все остальные случаи), то прыгаем на next */

greater:
    addl %edx, %ebx             /* Сложение значение массива с большей суммой */
    jmp next                    /* Перепрыгиваем less на next */

less:
    addl %edx, %ecx             /* Сложение значения массива с меньшей суммой */

next:
    addl $4, %esi               /* Смещение указателя на массив на 4 (в массиве данные типа long -
                                   4 байта, поэтому и смещение на 4) */
    cmpl $array_end, %esi       /* Сравнение текущего указателя массива с концом */
    jne check_loop              /* Если не равны, то прыгаем check_loop (повторяем действия)  */

    pushl %ecx                  /* Сохраняем в стэке значение меньшей суммы (printf при вызове
                                   изменит значения некоторых регистров, включая ecx. Для того,
                                   чтобы данные не затерлись, кидаем временно в стэк*/

    pushl %ebx                  /* Помещаем значение большей суммы в стэк */
    pushl $format_output_greater/* Помещаем в стэк формат вывода большей суммы */
    call printf                 /* Вызываем printf из C */
    addl $8, %esp               /* Возвращаем значение стэка обратно */

                                /* Здесь не кидаем в стэк значение меньшей суммы, так как оно уже
                                   там (закинули ранее и не затерли) */
    pushl $format_output_less   /* Действия аналогичны тем, что чуть выше */
    call printf
    addl $8, %esp

    movl $1, %eax               /* Помещаем код возврата в eax */
    movl $0, %ebx               /* Помещаем значение, которое вернется */
    int $0x80                   /* Вызываем прерывание (возврат значения,завершение работы проги) */


